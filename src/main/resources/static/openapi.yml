openapi: 3.0.3
info:
  title: API Rest - Backend - Arena Mafia
  version: v1
  description: |
    Backend do projeto para a Arena Mafia, desenvolvido como parte do curso de
    Análise e Desenvolvimento de Sistemas do Instituto Federal de Santa Catarina.
  termsOfService: https://github.com/LucasRibasCardoso/backend-arena-mafia
  license:
    name: Apache 2.0
    url: https://github.com/LucasRibasCardoso

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Token de autenticação JWT obtido no login."

  schemas:
    FieldErrorResponseDto:
      type: object
      properties:
        fieldName: {
          type: string,
          description: "Nome do campo que falhou na validação.",
          example: "username"
        }
        message: {
          type: string,
          description: "Mensagem de erro para o campo.",
          example: "O usuário é obrigatório"
        }
      required: [ fieldName, message ]

    ErrorResponseDto:
      type: object
      properties:
        timestamp: {
          type: string,
          format: date-time,
          example: "2025-08-15T13:55:00Z"
        }
        status: {
          type: integer,
          example: 400
        }
        message: {
          type: string,
          example: "Requisição inválida."
        }
        path: {
          type: string,
          example: "/api/some/endpoint"
        }
        fieldErrors:
          type: array
          description: "Lista de erros de validação de campos, se houver."
          items: { $ref: "#/components/schemas/FieldErrorResponseDto" }
          nullable: true
      required: [ timestamp, status, message, path, fieldErrors ]

    LoginRequestDto:
      type: object
      required: [ username, password ]
      properties:
        username: {
          type: string,
          description: "Nome de usuário.",
          example: "testuser"
        }
        password: {
          type: string,
          description: "Senha do usuário.",
          example: "123456"
        }

    TokenResponseDto:
      type: object
      properties:
        phone: {
          type: string,
          description: "Telefone do usuário autenticado.",
          example: "+5547912345678"
        }
        username: {
          type: string,
          description: "Nome de usuário autenticado.",
          example: "usuario123"
        }
        fullName: {
          type: string,
          description: "Nome completo do usuário autenticado.",
          example: "João da Silva"
        }
        role: {
          type: string,
          description: "Permissão do usuário autenticado.",
          example: "ROLE_USER"
        }
        accessToken: {
          type: string,
          description: "JWT de acesso.",
          example: "eyJhbGci..."
        }

    SignupRequestDto:
      type: object
      description: "Dados necessários para o cadastro de um novo usuário. A senha e a confirmação de senha devem ser idênticas."
      required: [ username, fullName, phone, password, confirmPassword ]
      properties:
        username:
          type: string
          description: "Nome de usuário único, deve conter apenas letras, números e underscore (_)."
          example: "joao_silva99"
        fullName:
          type: string
          description: "Nome completo do usuário."
          example: "João da Silva"
        phone:
          type: string
          description: "Número de telefone no formato internacional, incluindo o código do país e DDD."
          example: "+5547912345678"
        password:
          type: string
          format: "password"
          description: "Senha do usuário. Deve ter entre 6 e 20 caracteres."
          example: "senhaForte123"
        confirmPassword:
          type: string
          format: "password"
          description: "Confirmação da senha. Deve ser idêntica ao campo 'password'."
          example: "senhaForte123"

    SignupResponseDto:
      type: object
      properties:
        status:
          type: string
          description: "Status da conta do usuário após o registro."
          example: "pending_verification"
        message:
          type: string
          description: "Mensagem de confirmação do sucesso da operação."
          example: "Conta criada com sucesso. Um código de verificação foi enviado para o seu telefone."
        identifier:
          type: string
          description: "Identificador único (phone) do usuário recém-criado."
          example: "+558320548186"

    ValidateOtpRequestDto:
      type: object
      description: "Dados para verificação da conta via código OTP."
      required: [ phone, code ]
      properties:
        phone:
          type: string
          description: "Telefone de usuário da conta a ser verificada."
          example: "+5547912345678"
        code:
          type: string
          description: "Código OTP de 6 dígitos recebido por SMS."
          example: "123456"

    ResendCodeRequestDto:
      type: object
      description: "Telefone do usuário que está solicitando o reenvio do código OTP."
      required: [ phone ]
      properties:
        phone:
          type: string
          description: "Telefone de usuário da conta para a qual o código deve ser reenviado."
          example: "+5547912345678"

    SimpleMessageResponseDto:
      type: object
      properties:
        message:
          type: string
          example: "Operação realizada com sucesso."

    ForgotPasswordRequestDto:
      type: object
      description: "Telefone do usuário que está solicitando a alteração da senha."
      required: [ phone ]
      properties:
        phone:
          type: string
          description: "Telefone de usuário da conta para a qual a senha deve ser alterada."
          example: "+5547912345678"

    PasswordResetTokenResponseDto:
      type: object
      properties:
        passwordResetToken:
          type: string
          description: "Token temporário para redefinição de senha."
          example: "dawda-1234-asdas-5678-asdasd-9876"

    ResetPasswordRequestDto:
      type: object
      description: "Dados necessários para a etapa final da redefinição de senha."
      required: [ passwordResetToken, newPassword, confirmPassword ]
      properties:
        passwordResetToken:
          type: string
          description: "O token seguro de uso único recebido na etapa de validação do OTP."
          example: "a1b2c3d4-e5f6-7890-1234-567890abcdef"
        newPassword:
          type: string
          format: "password"
          description: "A nova senha do usuário. Deve ter entre 6 e 20 caracteres e não pode conter espaços."
          example: "novaSenhaSegura123"
        confirmPassword:
          type: string
          format: "password"
          description: "Confirmação da nova senha. Deve ser idêntica ao campo 'newPassword'."
          example: "novaSenhaSegura123"

    UserProfileResponseDTO:
      type: object
      description: "Dados da conta, retornados para o usuário autenticado."
      properties:
        username:
          type: string
          description: "Nome de usuário."
          example: "joao_silva"
        fullName:
          type: string
          description: "Nome completo do usuário."
          example: "João da Silva"
        phone:
          type: string
          description: "Telefone do usuário."
          example: "+5547912345678"
        role:
          type: string
          description: "Permissão do usuário."
          example: "ROLE_USER"

    UpdateProfileRequestDTO:
      type: object
      description: "Dados para atualização do perfil do usuário."
      required: [ fullName ]
      properties:
        fullName:
          type: string
          description: "Novo nome completo do usuário."
          example: "João da Silva"

    ChangeUsernameRequestDTO:
      type: object
      description: "Nome de usuário para ser atualizado"
      required: [ username ]
      properties:
        username:
          type: string
          description: "Novo nome de usuário"
          example: "joao_silva"

    ChangePasswordRequestDto:
      type: object
      description: "Dados necessários para alterar a senha do usuário autenticado."
      required: [ currentPassword, newPassword, confirmPassword ]
      properties:
        currentPassword:
          type: string
          format: "password"
          description: "Senha atual do usuário, para verificação."
          example: "senhaAtual123"
        newPassword:
          type: string
          format: "password"
          description: "A nova senha do usuário. Deve ter entre 6 e 20 caracteres e não pode conter espaços."
          example: "novaSenhaSegura123"
        confirmPassword:
          type: string
          format: "password"
          description: "Confirmação da nova senha. Deve ser idêntica ao campo 'newPassword'."
          example: "novaSenhaSegura123"

    ChangePhoneRequestDTO:
      type: object
      description: "Número de telefone para ser atualizado"
      required: [ newPhone ]
      properties:
        newPhone:
          type: string
          description: "Novo número de telefone"
          example: "+5521991234567"

    CompletePhoneChangeRequestDTO:
      type: object
      description: "Código OTP para validar o novo número de telefone"
      required: [ code ]
      properties:
        code:
          type: string
          description: "Código OTP de 6 dígitos recebido por SMS."
          example: "123456"

  headers:
    Cookie:
      description: "Cookie HttpOnly contendo o token de refresh. O navegador o armazena automaticamente e o anexa às requisições subsequentes."
      schema:
        type: string
        example: "refreshToken=asdasda-asdasd-asdasd-asdasd..."
    ExpiredCookie:
      description: "Instrui o navegador a expirar e remover o cookie `refreshToken`. O valor do cookie é zerado e o `Max-Age` é definido como 0."
      schema:
        type: string
        example: "refreshToken=; Path=/api/auth; Max-Age=0; HttpOnly; Secure"

  responses:
    ErrorResponseInternalServerError:
      description: Erro interno do servidor.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponseDto"
          example:
            timestamp: "2025-08-15T13:55:00Z"
            status: 500
            message: "Erro interno do servidor. Por favor, tente novamente mais tarde."
            path: "/api/some/endpoint"

    TokenResponseDto:
      description: Usuário autenticado com sucesso.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TokenResponseDto"

    SignupResponseDto:
      description: "Usuário registrado com sucesso. A conta está pendente de verificação."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignupResponseDto'

    SimpleMessageResponseDto:
      description: Operação realizada com sucesso.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SimpleMessageResponseDto'

    ForgotPasswordRequestDto:
      description: Enviar o telefone do usuário para iniciar o processo de redefinição de senha.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForgotPasswordRequestDto'

    PasswordResetTokenResponseDto:
      description: Token temporário para redefinição de senha.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PasswordResetTokenResponseDto'

    ResetPasswordRequestDto:
      description: Enviar o token de redefinição e a nova senha para efetivar a alteração.
      content:
        application/json:
        schema:
          $ref: '#/components/schemas/ResetPasswordRequestDto'

    UserProfileResponseDTO:
      description: Dados do perfil do usuário autenticado.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserProfileResponseDTO'



# Mapeamento dos endpoints da API
paths:
  # ---- Endpoints de autenticação ----
  /api/auth/login:
    post:
      operationId: "login"
      tags:
        - "Autenticação"
      summary: "Autenticar um usuário"
      description: "Autentica um usuário com nome de usuário e senha. Se as credenciais forem válidas, retorna um token de acesso (JWT) e um token de atualização (refresh token) em um cookie HttpOnly seguro."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequestDto"
      responses:
        "200":
          description: "Autenticação bem-sucedida. Retorna os dados do usuário e o token de acesso."
          headers:
            Cookie:
              $ref: "#/components/headers/Cookie"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponseDto"
        "400":
          description: "Requisição inválida. Ocorre se os dados fornecidos não passarem na validação, como campos em branco ou com formato incorreto."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T14:21:00Z"
                status: 400
                message: "Erro de validação. Verifique os campos informados."
                path: "/api/auth/login"
                fieldErrors:
                  - fieldName: "username"
                    message: "O campo usuário deve ter entre 4 e 50 caracteres"
        "401":
          description: "Não autorizado. Retornado quando as credenciais (usuário/senha) são inválidas."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 401
                message: "Credenciais inválidas. Por favor, verifique seu usuário e senha."
                path: "/api/auth/login"
        "409":
          description: "Conflito de estado. Ocorre quando o estado atual da conta impede o login (ex: pendente de verificação, bloqueada ou desativada)."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              examples:
                PendingVerification:
                  summary: "Conta pendente de verificação"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 409
                    message: "Atenção: Você precisa ativar sua conta. Por favor, termine o processo de cadastro."
                    path: "/api/auth/login"
                Locked:
                  summary: "Conta bloqueada"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 409
                    message: "Atenção: Sua conta está bloqueada. Por favor, contate o suporte."
                    path: "/api/auth/login"
                Disabled:
                  summary: "Conta desativada"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 409
                    message: "Atenção: Sua conta está desativada."
                    path: "/api/auth/login"
        "500":
          $ref: "#/components/responses/ErrorResponseInternalServerError"

  /api/auth/logout:
    post:
      operationId: "logout"
      tags:
        - "Autenticação"
      summary: "Realizar o logout do usuário"
      description: "Encerra a sessão do usuário. Invalida o refresh token no servidor e envia um cabeçalho para instruir o navegador a remover o cookie 'refreshToken'. Requer um token de acesso válido para ser executado."
      security:
        - bearerAuth: [ ]
      parameters:
        - in: "cookie"
          name: "refreshToken"
          required: false
          description: "O refresh token a ser invalidado. Normalmente, o navegador anexa este cookie automaticamente."
          schema:
            type: string
            example: "a1b2c3d4-e5f6-7890-1234-567890abcdef"
      responses:
        "204":
          description: "Logout realizado com sucesso. O refresh token foi invalidado e o cookie do navegador foi expirado."
          headers:
            ExpiredToken:
              $ref: "#/components/headers/ExpiredCookie"
        "400":
          description: "Requisição inválida. Ocorre se o formato do 'refreshToken' for inválido (não é um UUID válido)."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 400
                message: "Formato inválido para o refresh token."
                path: "/api/auth/logout"
        "401":
          description: "Não autorizado. Ocorre ao tentar acessar o endpoint sem um token de acesso válido ou com uma sessão expirada."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 401
                message: "Sua sessão é inválida ou expirou. Por favor, faça login novamente."
                path: "/api/auth/logout"
        "500":
          $ref: "#/components/responses/ErrorResponseInternalServerError"

  /api/auth/refresh-token:
    post:
      operationId: "refreshToken"
      tags:
        - "Autenticação"
      summary: "Renovar o token de acesso"
      description: "Gera um novo token de acesso (JWT) a partir de um refresh token válido. O refresh token deve ser enviado em um cookie HttpOnly chamado 'refreshToken'."
      parameters:
        - in: "cookie"
          name: "refreshToken"
          required: true
          description: "O refresh token recebido durante o login. O navegador anexa este cookie automaticamente."
          schema:
            type: string
            example: "a1b2c3d4-e5f6-7890-1234-567890abcdef"
      responses:
        "200":
          description: "Token de acesso renovado com sucesso. Um novo access token é retornado no corpo da resposta e um novo refresh token é enviado no cabeçalho 'Set-Cookie'."
          headers:
            Cookie:
              $ref: "#/components/headers/Cookie"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponseDto"
        "400":
          description: "Requisição inválida. Ocorre se o formato do 'refreshToken' for inválido (não é um UUID válido)."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T14:21:00Z"
                status: 400
                message: "Formato inválido para o refresh token."
                path: "/api/auth/refresh-token"
        "401":
          description: "Não autorizado. Ocorre se o 'refreshToken' estiver ausente, expirado ou não for encontrado no sistema."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              examples:
                MissingToken:
                  summary: "Refresh token ausente"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 401
                    message: "Sua sessão expirou. Por favor, faça login novamente."
                    path: "/api/auth/refresh-token"
                TokenNotFound:
                  summary: "Refresh token não encontrado"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 401
                    message: "Refresh token não encontrado."
                    path: "/api/auth/refresh-token"
        "409":
          description: "Conflito de estado. Ocorre se a conta não estiver ativada"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              examples:
                PendingVerification:
                  summary: "Conta pendente de verificação"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 409
                    message: "Atenção: Você precisa ativar sua conta. Por favor, termine o processo de cadastro."
                    path: "/api/auth/refresh-token"
                Locked:
                  summary: "Conta bloqueada"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 409
                    message: "Atenção: Sua conta está bloqueada. Por favor, contate o suporte."
                    path: "/api/auth/refresh-token"
                Disabled:
                  summary: "Conta desativada"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 409
                    message: "Atenção: Sua conta está desativada."
                    path: "/api/auth/refresh-token"
        "500":
          $ref: "#/components/responses/ErrorResponseInternalServerError"

  /api/auth/signup:
    post:
      operationId: "signup"
      tags:
        - "Autenticação"
      summary: "Cadastrar um novo usuário"
      description: "Registrar um novo usuário no sistema. A conta é criada com o status 'PENDING_VERIFICATION', e um código de verificação (OTP) é enviado para o telefone informado para posterior ativação."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupRequestDto"
      responses:
        "201":
          description: "Usuário cadastrado com sucesso e aguardando verificação."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignupResponseDto"
        "400":
          description: "Requisição inválida. Ocorre se os dados de entrada forem inválidos (ex: senhas não coincidem, formato de telefone inválido ou violações de regras de campo)."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              examples:
                PasswordsNotMatch:
                  summary: "Senhas não coincidem"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Erro de validação. Verifique os campos informados."
                    path: "/api/auth/signup"
                    fieldErrors:
                      - fieldName: "confirmPassword"
                        message: "A senha de confirmação não corresponde à senha."
                InvalidPhone:
                  summary: "Número de telefone inválido"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Número de telefone inválido. Verifique o DDD e a quantidade de dígitos."
                    path: "/api/auth/signup"
        "409":
          description: "Conflito de estado. Ocorre se o nome de usuário ou o telefone já estiverem cadastrados no sistema."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              examples:
                UsernameExists:
                  summary: "Nome de usuário já em uso"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 409
                    message: "Esse nome de usuário já está em uso."
                    path: "/api/auth/signup"
                PhoneExists:
                  summary: "Número de telefone já em uso"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 409
                    message: "Esse número de telefone já está em uso."
                    path: "/api/auth/signup"
        "500":
          $ref: "#/components/responses/ErrorResponseInternalServerError"

  /api/auth/verify-account:
    post:
      operationId: "verifyAccount"
      tags:
        - "Autenticação"
      summary: "Verificar e ativar uma nova conta"
      description: "Valida o código de verificação (OTP) enviado por SMS para uma conta com status 'PENDING_VERIFICATION'. Se o código for válido, a conta é ativada (status 'ACTIVE'), e o usuário é autenticado, recebendo um token de acesso e um cookie 'refreshToken'."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateOtpRequestDto"
      responses:
        "200":
          description: "Conta ativada e usuário autenticado com sucesso."
          headers:
            Cookie:
              $ref: "#/components/headers/Cookie"
          content:
            application/json:
              schema:
                $ref: "#/components/responses/TokenResponseDto"
        "400":
          description: "Requisição inválida. Ocorre se os dados forem inválidos (ex: telefone, código em branco) ou se o código OTP for incorreto ou expirado."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              examples:
                MissingCode:
                  summary: "Código de verificação ausente"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Erro de validação. Verifique os campos informados."
                    path: "/api/auth/verify-account"
                    fieldErrors:
                      - fieldName: "code"
                        message: "O código de verificação é obrigatório."
                InvalidPhone:
                  summary: "Número de telefone inválido"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Número de telefone inválido. Verifique o DDD e a quantidade de dígitos."
                    path: "/api/auth/verify-account"
                InvalidCode:
                  summary: "Código OTP inválido ou expirado"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Código de verificação inválido ou expirado."
                    path: "/api/auth/verify-account"
        "404":
          description: "Não encontrado. Ocorre se não houver um usuário com o telefone fornecido e status pendente."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 404
                message: "Usuário não encontrado. Retorne ao início do cadastro para criar uma nova conta."
                path: "/api/auth/verify-account"
        "409":
          description: "Conflito de estado. Ocorre ao tentar verificar uma conta que já se encontra em um estado 'ACTIVE"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 409
                message: "Atenção: A conta já está ativada. Você pode fazer login."
                path: "/api/auth/verify-account"
        "500":
          $ref: "#/components/responses/ErrorResponseInternalServerError"

  /api/auth/resend-code:
    post:
      operationId: "resendVerificationCode"
      tags:
        - "Autenticação"
      summary: "Reenviar código de verificação"
      description: "Gera e reenvia um novo código de verificação (OTP) para o telefone de um usuário com conta em estado 'PENDING_VERIFICATION'. Por segurança, este endpoint sempre retorna sucesso, mesmo que o telefone não esteja cadastrado, para evitar a enumeração de usuários."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResendCodeRequestDto"
        responses:
          "204":
            description: "Sucesso. A solicitação foi validada e um novo código de verificação foi enviado para o número de telefone associado à conta. O cliente deve agora permitir que o usuário insira o novo código."
          "400":
            description: "Requisição inválida. Ocorre se o formato do telefone for inválido."
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ErrorResponseDto"
                examples:
                  MissingPhone:
                    summary: "Número de telefone não informado"
                    value:
                      timestamp: "2025-08-15T13:55:00Z"
                      status: 400
                      message: "Erro de validação. Verifique os campos informados."
                      path: "/api/auth/resend-code"
                      fieldErros:
                        fieldName: "phone"
                        message: "Por favor, informe seu telefone."
                  InvalidPhone:
                    summary: "Número de telefone inválido"
                    value:
                      timestamp: "2025-08-15T13:55:00Z"
                      status: 400
                      message: "Número de telefone inválido. Verifique o DDD e a quantidade de dígitos."
                      path: "/api/auth/resend-code"
          "409":
            description: "Conflito de estado. Ocorre ao tentar reenviar um código para uma conta que não está com status 'PENDING_VERIFICATION'."
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ErrorResponseDto"
                example:
                  timestamp: "2025-08-15T13:55:00Z"
                  status: 409
                  message: "Atenção: Só é possível reenviar o código para contas pendentes de verificação."
                  path: "/api/auth/resend-code"
          "500":
            $ref: "#/components/responses/ErrorResponseInternalServerError"

  /api/auth/forgot-password:
    post:
      operationId: "forgotPassword"
      tags:
        - "Autenticação"
      summary: "Iniciar redefinição de senha"
      description: "Inicia o fluxo de redefinição de senha. Se o usuário existir e estiver ativo, um código OTP é enviado para o seu telefone. Por segurança, a resposta é sempre a mesma para evitar a enumeração de contas."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForgotPasswordRequestDto"
      responses:
        "202":
          description: "Solicitação processada. A mensagem não indica se o telefone foi encontrado, para proteger a privacidade do usuário."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleMessageResponseDto"
              example:
                message: "Se o telefone informado for válido, enviaremos um código para verificação da conta."
        "400":
          description: "Requisição inválida. Ocorre se o formato do telefone for inválido."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              examples:
                MissingPhone:
                  summary: "Número de telefone não informado"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Erro de validação. Verifique os campos informados."
                    path: "/api/auth/forgot-password"
                    fieldErrors:
                      - fieldName: "phone"
                        message: "Por favor, informe seu telefone."
                InvalidPhone:
                  summary: "Número de telefone inválido"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Número de telefone inválido. Verifique o DDD e a quantidade de dígitos."
                    path: "/api/auth/forgot-password"
        "409":
          description: "Conflito de estado. Ocorre se a conta não estiver ativada"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              examples:
                PendingVerification:
                  summary: "Conta pendente de verificação"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 409
                    message: "Atenção: Você precisa ativar sua conta. Por favor, termine o processo de cadastro."
                    path: "/api/auth/forgot-password"
                Locked:
                  summary: "Conta bloqueada"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 409
                    message: "Atenção: Sua conta está bloqueada. Por favor, contate o suporte."
                    path: "/api/auth/forgot-password"
                Disabled:
                  summary: "Conta desativada"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 409
                    message: "Atenção: Sua conta está desativada."
                    path: "/api/auth/forgot-password"
        "500":
          $ref: "#/components/responses/ErrorResponseInternalServerError"

  /api/auth/password-reset-token:
    post:
      operationId: "passwordResetToken"
      tags:
        - "Autenticação"
      summary: "Validar código e gerar token de redefinição de senha"
      description: "Segunda etapa do fluxo de redefinição de senha. Valida o código OTP recebido pelo usuário. Se o código for válido, gera e retorna um token temporário de uso único para a redefinição de senha."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateOtpRequestDto"
      responses:
        "200":
          description: "Código OTP validado com sucesso. Retorna o token temporário para redefinição de senha."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PasswordResetTokenResponseDto"
        "400":
          description: "Requisição inválida. Ocorre se houver erros de validação (código em branco) ou se o código OTP for inválido/expirado."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              examples:
                MissingCode:
                  summary: "Código de verificação ausente"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Erro de validação. Verifique os campos informados."
                    path: "/api/auth/password-reset-token"
                    fieldErrors:
                      - fieldName: "code"
                        message: "O código de verificação é obrigatório."
                InvalidPhone:
                  summary: "Número de telefone inválido"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Número de telefone inválido. Verifique o DDD e a quantidade de dígitos."
                    path: "/api/auth/password-reset-token"
                InvalidCode:
                  summary: "Código OTP inválido ou expirado"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Código de verificação inválido ou expirado."
                    path: "/api/auth/password-reset-token"
        "404":
          description: "Não encontrado. Ocorre se não houver um usuário associado ao telefone fornecido."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 404
                message: "Usuário não encontrado. Verifique o número de telefone informado e tente novamente."
                path: "/api/auth/password-reset-token"
        "409":
          description: "Conflito de estado. Ocorre se a conta não estiver ativada"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
            examples:
              PendingVerification:
                summary: "Conta pendente de verificação"
                value:
                  timestamp: "2025-08-15T13:55:00Z"
                  status: 409
                  message: "Atenção: Você precisa ativar sua conta. Por favor, termine o processo de cadastro."
                  path: "/api/auth/password-reset-token"
              Locked:
                summary: "Conta pendente de verificação"
                value:
                  timestamp: "2025-08-15T13:55:00Z"
                  status: 409
                  message: "Atenção: Sua conta está bloqueada. Por favor, contate o suporte."
                  path: "/api/auth/password-reset-token"
              Disabled:
                summary: "Conta pendente de verificação"
                value:
                  timestamp: "2025-08-15T13:55:00Z"
                  status: 409
                  message: "Atenção: Sua conta está desativada."
                  path: "/api/auth/password-reset-token"
        "500":
          $ref: "#/components/responses/ErrorResponseInternalServerError"

  /api/auth/reset-password:
    post:
      operationId: "resetPassword"
      tags:
        - "Autenticação"
      summary: "Redefinir a senha do usuário"
      description: "Etapa final do fluxo de redefinição de senha. Recebe o token temporário gerado na etapa anterior e a nova senha para efetivar a alteração no sistema."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequestDto"
      responses:
        "200":
          description: "Senha redefinida com sucesso."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleMessageResponseDto"
              example:
                message: "Senha redefinida com sucesso. Você já pode fazer o login com sua nova senha."
        "400":
          description: "Requisição inválida. Ocorre se o token de redefinição for inválido/expirado, as senhas não coincidirem ou houver erros de validação."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              examples:
                MissingToken:
                  summary: "Token de redefinição ausente"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Erro de validação. Verifique os campos informados."
                    path: "/api/auth/reset-password"
                    fieldErros:
                      - fieldName: "passwordResetToken"
                        message: "O token de redefinição de senha é obrigatório."
                PasswordsNotMatch:
                  summary: "Senhas não coincidem"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Erro de validação. Verifique os campos informados."
                    path: "/api/auth/reset-password"
                    fieldErros:
                      - fieldName: "confirmedPassword"
                        message: "A senha de confirmação não corresponde à nova senha."

                InvalidToken:
                  summary: "Token de redefinição inválido ou expirado"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Token inválido ou expirado."
                    path: "/api/auth/reset-password"
        "404":
          description: "Não encontrado. Ocorre se o token de redefinição não estiver associado a nenhum usuário válido."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 400
                message: "Ocorreu um erro ao redefinir sua senha. Por favor, inicie o processo novamente."
                path: "/api/auth/reset-password"
        "409":
          description: "Conflito de estado. Ocorre se a conta não estiver ativada"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              examples:
                PendingVerification:
                  summary: "Conta pendente de verificação"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 409
                    message: "Atenção: Você precisa ativar sua conta. Por favor, termine o processo de cadastro."
                    path: "/api/auth/reset-password"
                Locked:
                  summary: "Conta pendente de verificação"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 409
                    message: "Atenção: Sua conta está bloqueada. Por favor, contate o suporte."
                    path: "/api/auth/reset-password"
                Disabled:
                  summary: "Conta pendente de verificação"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 409
                    message: "Atenção: Sua conta está desativada."
                    path: "/api/auth/reset-password"
        "500":
          $ref: "#/components/responses/ErrorResponseInternalServerError"

  # ---- Endpoints atualização da conta e perfil ----
  /api/users/me/profile:
    patch:
      operationId: updateUserProfile
      tags: [ "Usuário" ]
      summary: "Atualizar dados do perfil do usuário"
      description: "Atualiza os dados do perfil do usuário atualmente autenticado. Atualmente só pode atualizar o nome completo."
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProfileRequestDTO"
      responses:
        "200":
          description: "Perfil atualizado com sucesso. Retorna os dados atualizados do usuário."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileResponseDTO"
        "400":
          description: "Requisição inválida. Ocorre se os dados fornecidos não passarem na validação, como campos em branco ou com formato incorreto."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T14:21:00Z"
                status: 400
                message: "Erro de validação. Verifique os campos informados."
                path: "/api/users/me/profile"
                fieldErrors:
                  - fieldName: "fullName"
                    message: "O nome completo deve ter entre 3 e 100 caracteres."
        "401":
          description: "Não autorizado. Ocorre ao tentar acessar o endpoint sem um token de acesso válido ou com uma sessão expirada."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 401
                message: "Sua sessão é inválida ou expirou. Por favor, faça login novamente."
                path: "/api/users/me/profile"
        "404":
          description: "Não encontrado. Ocorre se o usuário autenticado não for encontrado para ser atualizado."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 404
                message: "Usuário não encontrado."
                path: "/api/users/me/profile"
        "500":
          $ref: "#/components/responses/ErrorResponseInternalServerError"

  /api/users/me/username:
    patch:
      operationId: changeUsername
      tags: [ "Usuário" ]
      summary: "Atualizar o username do usuário"
      description: "Atualiza o username do usuário verificando se o username novo não está sendo utilizado."
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeUsernameRequestDTO"
      responses:
        "200":
          description: "Username atualizado com sucesso. Retorna os dados atualizados do usuário."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileResponseDTO"
        "400":
          description: "Requisição inválida. Ocorre se os dados fornecidos não passarem na validação, como campos em branco ou com formato incorreto."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T14:21:00Z"
                status: 400
                message: "Erro de validação. Verifique os campos informados."
                path: "/api/users/me/username"
                fieldErrors:
                  - fieldName: "username"
                    message: "Por favor, informe um novo nome de usuário."
        "401":
          description: "Não autorizado. Ocorre ao tentar acessar o endpoint sem um token de acesso válido ou com uma sessão expirada."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 401
                message: "Sua sessão é inválida ou expirou. Por favor, faça login novamente."
                path: "/api/users/me/username"
        "404":
          description: "Não encontrado. Ocorre se o usuário autenticado não for encontrado para ser atualizado."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 404
                message: "Usuário não encontrado."
                path: "/api/users/me/username"
        "409":
          description: "Conflito de estado. Ocorre se o username já estiver em uso por outro usuário."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 409
                message: "Esse nome de usuário já está em uso."
                path: "/api/users/me/username"
        "500":
          $ref: "#/components/responses/ErrorResponseInternalServerError"

  /api/users/me/password:
    post:
      operationId: changePassword
      tags: [ "Usuário" ]
      summary: "Atualizar a senha do usuário"
      description: "Atualiza a senha do usuário autenticado. Requer a senha atual para validação e a nova senha com confirmação."
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordRequestDto"
      responses:
        "204":
          description: "Senha atualizada com sucesso."
        "400":
          description: "Requisição inválida. Ocorre se os dados fornecidos não passarem na validação, como campos em branco ou as senhas não se coincidirem."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              examples:
                MissingConfirmPassword:
                  summary: "Senha de confirmação não informada"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Erro de validação. Verifique os campos informados."
                    path: "/api/users/me/password"
                    fieldErrors:
                      - fieldName: "confirmPassword"
                        message: "Por favor, confirme sua nova senha."
                PasswordsNotMatch:
                  summary: "Senhas não coincidem"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    path: "/api/users/me/password"
                    message: "Erro de validação. Verifique os campos informados."
                    fieldErrors:
                      - fieldName: "confirmedPassword"
                        message: "A senha de confirmação não corresponde à senha."
                InvalidCurrentPassword:
                  summary: "Senha atual inválida"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    path: "/api/users/me/password"
                    message: "A Senha atual está incorreta"
        "401":
          description: "Não autorizado. Ocorre ao tentar acessar o endpoint sem um token de acesso válido ou com uma sessão expirada."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 401
                message: "Sua sessão é inválida ou expirou. Por favor, faça login novamente."
                path: "/api/users/me/password"
        "404":
          description: "Não encontrado. Ocorre se o usuário autenticado não for encontrado para ser atualizado."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 404
                message: "Usuário não encontrado."
                path: "/api/users/me/username"
        "500":
          $ref: "#/components/responses/ErrorResponseInternalServerError"

  /api/users/me/phone/verification:
    post:
      operationId: initiateChangePhone
      tags: [ "Usuário" ]
      summary: "Iniciar alteração do número de telefone"
      description: "Inicia o processo de alteração do número de telefone do usuário autenticado. Envia um código OTP para o novo número de telefone fornecido para verificação."
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePhoneRequestDTO"
      responses:
        "202":
          description: "Solicitação processada. Um código OTP foi enviado para o novo número de telefone fornecido."
        "400":
          description: "Requisição Inválida. Ocorre se os dados fornecidos não passarem na validação, como campos em branco ou formato de telefone inválido."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              examples:
                MissingNewPhone:
                  summary: "Novo telefone não informado"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Erro de validação. Verifique os campos informados."
                    path: "/api/users/me/phone/verification"
                    fieldErrors:
                      - fieldName: "newPhone"
                        message: "Por favor, informe seu telefone."
                InvalidPhone:
                  summary: "Número de telefone inválido"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    path: "/api/users/me/phone/verification"
                    message: "Número de telefone inválido. Verifique o DDD e a quantidade de dígitos."
        "401":
          description: "Não autorizado. Ocorre ao tentar acessar o endpoint sem um token de acesso válido ou com uma sessão expirada."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 401
                message: "Sua sessão é inválida ou expirou. Por favor, faça login novamente."
                path: "/api/users/me/phone/verification"
        "404":
          description: "Não encontrado. Retornado quando o usuário autenticado não for encontrado para atualizar o telefone"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 404
                message: "Usuário não encontrado."
                path: "/api/users/me/phone/verification"
        "409":
          description: "Conflito. Retornado quando o novo número de telefone já está em uso por outro usuário."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 400
                path: "/api/users/me/phone/verification"
                message: "Esse número de telefone já está em uso."
        "500":
          $ref: "#/components/responses/ErrorResponseInternalServerError"

  /api/users/me/phone/verification/confirm:
    patch:
      operationId: CompleteChangePhone
      tags: [ "Usuário" ]
      summary: "Confirmar alteração do número de telefone"
      description: "Confirma a alteração do número de telefone do usuário autenticado. Valida o código OTP para que o novo número de telefone seja alterado"
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompletePhoneChangeRequestDTO"
      responses:
        "200":
          description: "Sucesso. Retorna os dados do usuário atualizado."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileResponseDTO"
        "400":
          description: "Requisição Inválida. Ocorre se os dados fornecidos não passarem na validação, como campos em branco ou código OTP inválido/expirado"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              examples:
                MissingCode:
                  summary: "Código de verificação ausente"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Erro de validação. Verifique os campos informados."
                    path: "/api/users/me/phone/verification"
                    fieldErrors:
                      - fieldName: "code"
                        message: "O código de verificação é obrigatório."
                InvalidCode:
                  summary: "Código de validação inválido ou expirado"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Código de verificação inválido ou expirado."
                    path: "/api/users/me/phone/verification"
                ChangePhoneRequestExpired:
                  summary: "Solicitação de alteração de telefone expirada"
                  value:
                    timestamp: "2025-08-15T13:55:00Z"
                    status: 400
                    message: "Sua solicitação de alteração de telefone já expirou. Tente novamente."
                    path: "/api/users/me/phone/verification"
        "401":
          description: "Não autorizado. Ocorre ao tentar acessar o endpoint sem um token de acesso válido ou com uma sessão expirada."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 401
                message: "Sua sessão é inválida ou expirou. Por favor, faça login novamente."
                path: "/api/users/me/phone/verification/confirm"
        "404":
          description: "Não encontrado. Retornado quando o usuário autenticado não for encontrado para atualizar o telefone"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
              example:
                timestamp: "2025-08-15T13:55:00Z"
                status: 404
                message: "Usuário não encontrado."
                path: "/api/users/me/phone/verification"
        "500":
          $ref: "#/components/responses/ErrorResponseInternalServerError"