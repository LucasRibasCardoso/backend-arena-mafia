openapi: 3.0.3
info:
  title: API Rest - Backend - Arena Mafia
  version: v1
  description: |
    Backend do projeto para a Arena Mafia, desenvolvido como parte do curso de
    Análise e Desenvolvimento de Sistemas do Instituto Federal de Santa Catarina.
    
    A seguir estão os códigos de erro mais comuns que podem ser retornados por qualquer endpoint. 
    Erros específicos de cada operação estão documentados nos exemplos de resposta de cada endpoint.
    
    | Código (`errorCode`) | Mensagem (`developerMessage`) |
    |---|---|
    | `UNEXPECTED_ERROR` | Ocorreu um erro inesperado. Tente novamente. |
    | `VALIDATION_FAILED` | A validação falhou. Verifique os campos. |
    | `ACCESS_DENIED` | Acesso negado. Você não tem permissão. |
    | `SESSION_EXPIRED` | Sua sessão expirou. Faça login novamente. |
    | `MALFORMED_JSON_REQUEST` | Requisição JSON malformada. |

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Token de autenticação JWT obtido no login."

  schemas:
    FieldError:
      type: object
      required: [ fieldName, errorCode, developerMessage ]
      properties:
        fieldName:
          type: string
          example: "username"
        errorCode:
          type: string
          example: "USERNAME_REQUIRED"
        developerMessage:
          type: string
          example: "O nome de usuário é obrigatório."

    ErrorResponse:
      type: object
      required: [ timestamp, status, errorCode, developerMessage, path ]
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2024-06-15T14:30:00Z"
        status:
          type: integer
          example: 400
        errorCode:
          type: string
          example: "VALIDATION_FAILED"
        developerMessage:
          type: string
          example: "A validação falhou. Verifique os detalhes dos campos para mais informações."
        path:
          type: string
          example: "/api/auth/login"
        fieldErrors:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/FieldError'

    LoginRequestDto:
      type: object
      description: Corpo da requisição para realizar o login.
      required: [ username, password ]
      properties:
        username:
          type: string
          description: Nome de usuário para login.
          pattern: '^[a-zA-Z0-9_]+$'
          minLength: 3
          maxLength: 50
          example: "test_user"
        password:
          type: string
          format: password
          description: Senha do usuário.
          pattern: '^\S+$'
          minLength: 6
          maxLength: 20
          example: "password123"

    AuthResponseDto:
      type: object
      description: Resposta contendo os dados do usuário autenticado e o token de acesso.
      required: [ userId, phone, username, fullName, role, accessToken ]
      properties:
        userId:
          type: string
          format: uuid
          description: ID único do usuário autenticado.
          example: "c1a2b3d4-e5f6-7890-1234-567890abcdef"
        phone:
          type: string
          description: Número de telefone do usuário.
          example: "+5547991234567"
        username:
          type: string
          description: Nome de usuário.
          example: "test_user"
        fullName:
          type: string
          description: Nome completo do usuário.
          example: "Usuário de Teste"
        role:
          type: string
          description: Nível de permissão do usuário no sistema.
          example: "ROLE_USER"
        accessToken:
          type: string
          description: Token JWT (JSON Web Token) utilizado para autorizar requisições nos endpoints protegidos.
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"

    ForgotPasswordRequestDto:
      type: object
      description: Corpo da requisição para iniciar o processo de redefinição de senha.
      required:
        - phone
      properties:
        phone:
          type: string
          description: |
            Número de telefone do usuário no formato internacional E.164 para o qual o 
            código foi de verificação será enviado."
          pattern: '^\\+[1-9]\\d{1,14}$'
          example: "+5547991234567"

    ForgotPasswordResponseDto:
      type: object
      description: "Resposta após iniciar o processo de redefinição de senha."
      required:
        - otpSessionId
        - message
      properties:
        otpSessionId:
          type: string
          format: uuid
          description: "O ID da sessão de verificação OTP, que deve ser usado para validar o código recebido."
          example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        message:
          type: string
          description: "Mensagem informando que o código de verificação foi enviado por sms."
          example: "Se o número estiver cadastrado, você receberá um código de verificação."

    ValidateOtpRequestDto:
      type: object
      description: Corpo da requisição para validar um código OTP (One-Time Password).
      required:
        - otpSessionId
        - otpCode
      properties:
        otpSessionId:
          type: string
          format: uuid
          description: O ID da sessão de verificação OTP, recebido ao solicitar o código.
          example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        otpCode:
          type: string
          description: O código de 6 dígitos enviado ao usuário.
          pattern: '\d{6}'
          minLength: 6
          maxLength: 6
          example: "123456"

    PasswordResetTokenResponseDto:
      type: object
      description: Resposta contendo o token de redefinição de senha após a validação do código OTP.
      required:
        - passwordResetToken
      properties:
        passwordResetToken:
          type: string
          format: uuid
          description: Token de redefinição de senha que deve ser usado para alterar a senha
          example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"

    ResetPasswordRequestDto:
      type: object
      description: Corpo da requisição para definir uma nova senha. O campo confirmPassword deve ser idêntico ao newPassword.
      required:
        - passwordResetToken
        - newPassword
        - confirmPassword
      properties:
        passwordResetToken:
          type: string
          format: uuid
          description: "O token recebido na etapa anterior para autorizar a redefinição de senha."
          example: "a1b2c3d4-e5f6-7890-1234-567890abcdef"
        newPassword:
          type: string
          format: password
          description: "A nova senha para a conta do usuário."
          pattern: '^\\S+$'
          minLength: 6
          maxLength: 20
          example: "novaSenha@123"
        confirmPassword:
          type: string
          format: password
          description: "Confirmação da nova senha."
          pattern: '^\\S+$'
          minLength: 6
          maxLength: 20
          example: "novaSenha@123"

    SignupRequestDto:
      type: object
      description: Corpo da requisição para o cadastro de um novo usuário. A senha e a confirmação de senha devem ser idênticas.
      required:
        - username
        - fullName
        - phone
        - password
        - confirmPassword
      properties:
        username:
          type: string
          description: "Nome de usuário único para login."
          pattern: '^[a-zA-Z0-9_]+$'
          minLength: 3
          maxLength: 50
          example: "novo_usuario123"
        fullName:
          type: string
          description: "Nome completo do usuário."
          minLength: 3
          maxLength: 100
          example: "Nome Completo de Exemplo"
        phone:
          type: string
          description: "Número de telefone do usuário no formato internacional E.164."
          pattern: '^\\+[1-9]\\d{1,14}$'
          example: "+5547991234567"
        password:
          type: string
          format: password
          description: "Senha de acesso do usuário."
          pattern: '^\\S+$'
          minLength: 6
          maxLength: 20
          example: "senhaForte@123"
        confirmPassword:
          type: string
          format: password
          description: "Confirmação da senha. Deve ser idêntica ao campo 'password'."
          pattern: '^\\S+$'
          minLength: 6
          maxLength: 20
          example: "senhaForte@123"

    SignupResponseDto:
      type: object
      description: Resposta da API após um cadastro bem-sucedido, indicando a necessidade de verificação por OTP.
      required:
        - otpSessionId
        - message
      properties:
        otpSessionId:
          type: string
          format: uuid
          description: "O ID da sessão de verificação OTP que deve ser usado na próxima etapa para validar o código."
          example: "a1b2c3d4-e5f6-7890-1234-567890abcdef"
        message:
          type: string
          description: "Uma mensagem informativa para o usuário sobre o próximo passo."
          example: "Conta criada com sucesso. Um código de verificação foi enviado para o seu telefone."

  headers:
    Set-Cookie:
      description: |
        Contém o `refreshToken` utilizado para renovar a sessão. 
        Este é um cookie seguro com os seguintes atributos:
        - **HttpOnly**: Não pode ser acessado por JavaScript no navegador, protegendo contra ataques XSS.
        - **Secure**: Só é enviado em requisições HTTPS.
        - **SameSite=Strict**: Ajuda a proteger contra ataques CSRF.
        - **Max-Age**: Define o tempo de vida do cookie (ex: 7 dias).
      schema:
        type: string
        example: "refreshToken=73e597d3-21f0...; Max-Age=604800; Path=/; Secure; HttpOnly; SameSite=Strict"

  parameters:
    RefreshTokenCookie:
      in: cookie
      name: refreshToken
      schema:
        type: string
        format: uuid
      required: false
      description: "Cookie contendo o refreshToken para atualização da sessão."

  responses:

    InternalServerError:
      description: Erro lançado quando ocorre um erro inesperado no servidor.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            timestamp: "2024-06-15T14:30:00Z"
            status: 500
            errorCode: "UNEXPECTED_ERROR"
            developerMessage: "Ocorreu um erro inesperado. Por favor, tente novamente mais tarde."
            path: "/api/some/endpoint"

    UnauthorizedError:
      description: |
        Erro lançado quando o token de autenticação está ausente, inválido ou expirado. Também é 
        lançado quando a conta do usuário não está mais ativa.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            SessionExpired:
              summary: Sessão Expirada
              value:
                timestamp: "2024-06-15T14:30:00Z"
                status: 401
                errorCode: "SESSION_EXPIRED"
                developerMessage: "Sua sessão expirou. Por favor, faça login novamente."
                path: "/api/security/endpoint"
            AccountLocked:
              summary: Conta Bloqueada
              value:
                timestamp: "2024-06-15T14:30:00Z"
                status: 401
                errorCode: "ACCOUNT_LOCKED"
                developerMessage: "Sua conta está bloqueada. Por favor, contate o suporte."
                path: "/api/security/endpoint"
            AccountDisabled:
              summary: Conta Desativada
              value:
                timestamp: "2024-06-15T14:30:00Z"
                status: 401
                errorCode: "ACCOUNT_DISABLED"
                developerMessage:
                  "Sua conta está desativada e será deletada em breve. 
                  Entre em contato com o suporte para reativá-la."
                path: "/api/security/endpoint"
            AccountPendingVerification:
              summary: Conta Pendente
              value:
                timestamp: "2024-06-15T14:30:00Z"
                status: 401
                errorCode: "ACCOUNT_PENDING_VERIFICATION"
                developerMessage: "Você precisa ativar sua conta. Conclua o processo de cadastro."
                path: "/api/security/endpoint"
    
    AccountStatusForbidden:
      description: Erro lançado quando a conta do usuário não está ativa (bloqueada, desativada ou pendente).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            AccountLocked:
              summary: Conta Bloqueada
              value:
                timestamp: "2024-06-15T14:30:00Z"
                status: 403
                errorCode: "ACCOUNT_LOCKED"
                developerMessage: "Sua conta está bloqueada. Por favor, contate o suporte."
                path: "/api/some/endpoint"
            AccountDisabled:
              summary: Conta Desativada
              value:
                timestamp: "2024-06-15T14:30:00Z"
                status: 403
                errorCode: "ACCOUNT_DISABLED"
                developerMessage:
                  "Sua conta está desativada e será deletada em breve. 
                  Entre em contato com o suporte para reativá-la."
                path: "/api/some/endpoint"
            AccountPendingVerification:
              summary: Conta Pendente
              value:
                timestamp: "2024-06-15T14:30:00Z"
                status: 403
                errorCode: "ACCOUNT_PENDING_VERIFICATION"
                developerMessage: "Você precisa ativar sua conta. Conclua o processo de cadastro."
                path: "/api/some/endpoint"
    
    AuthResponseDto:
      description: Resposta contendo os dados do usuário autenticado e o token de acesso.
      content:
        application/json:
        schema:
          $ref: '#/components/schemas/AuthResponseDto'

    ForgotPasswordResponseDto:
      description: Resposta após iniciar o processo de redefinição de senha.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForgotPasswordResponseDto'


# Mapeamento dos endpoints da API
paths:
  /api/auth/login:
    post:
      operationId: loginUser
      tags: [ Autenticação ]
      summary: Realiza o login do usuário e retorna um token de acesso.
      description: |
        Este endpoint autentica um usuário com base no nome de usuário e senha fornecidos.
        Se as credenciais estiverem corretas, retorna um token JWT (JSON Web Token)
        que deve ser usado para autorizar requisições subsequentes aos endpoints protegidos.
        Além disso, um `refreshToken` é enviado como um cookie seguro para renovação da sessão.
      requestBody:
        description: Corpo da requisição contendo as credenciais do usuário.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
      responses:
        200:
          description: |
            Usuário autenticado com sucesso. Retorna os dados do usuário e o token de acesso.
            Também define um cookie seguro contendo o `refreshToken` para renovação da sessão.
          headers:
            Set-Cookie:
              $ref: '#/components/headers/Set-Cookie'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponseDto'
        400:
          description: Erro lançado quando a validação dos dados de entrada falha.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                InvalidUsername:
                  summary: Nome de usuário com formato inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "VALIDATION_FAILED"
                    developerMessage: "A validação falhou. Verifique os detalhes dos campos para mais informações."
                    path: "/api/auth/login"
                    fieldErrors:
                      - fieldName: "username"
                        errorCode: "USERNAME_REQUIRED"
                        developerMessage: "O nome de usuário é obrigatório."
                      - fieldName: "username"
                        errorCode: "USERNAME_INVALID_FORMAT"
                        developerMessage: "O nome de usuário pode conter apenas letras, números e underscore (_)."
                      - fieldName: "username"
                        errorCode: "USERNAME_INVALID_LENGTH"
                        developerMessage: "O nome de usuário deve ter entre 3 e 50 caracteres."
                InvalidPassword:
                  summary: Senha com formato inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "VALIDATION_FAILED"
                    developerMessage: "A validação falhou. Verifique os detalhes dos campos para mais informações."
                    path: "/api/auth/login"
                    fieldErrors:
                      - fieldName: "password"
                        errorCode: "PASSWORD_REQUIRED"
                        developerMessage: "A senha é obrigatória."
                      - fieldName: "password"
                        errorCode: "PASSWORD_INVALID_LENGTH"
                        developerMessage: "A senha deve ter entre 6 e 20 caracteres."
                      - fieldName: "password"
                        errorCode: "PASSWORD_NO_WHITESPACE"
                        developerMessage: "A senha não pode conter espaços em branco."
        401:
          description: Erro lançado quando as credenciais fornecidas são inválidas ou a conta do usuário não está ativa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                InvalidCredentials:
                  summary: Credenciais Inválidas
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 401
                    errorCode: "INVALID_CREDENTIALS"
                    developerMessage: "Credenciais inválidas. Por favor, verifique seu usuário e senha."
                    path: "/api/auth/login"
                AccountLocked:
                  summary: Conta Bloqueada
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 401
                    errorCode: "ACCOUNT_LOCKED"
                    developerMessage: "Sua conta está bloqueada. Por favor, contate o suporte."
                    path: "/api/auth/login"
                AccountDisabled:
                  summary: Conta Desativada
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 401
                    errorCode: "ACCOUNT_DISABLED"
                    developerMessage:
                      "Sua conta está desativada e será deletada em breve. 
                      Entre em contato com o suporte para reativá-la."
                    path: "/api/auth/login"
                AccountPendingVerification:
                  summary: Conta Pendente
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 401
                    errorCode: "ACCOUNT_PENDING_VERIFICATION"
                    developerMessage: "Você precisa ativar sua conta. Conclua o processo de cadastro."
                    path: "/api/auth/login"
        500:
          $ref: '#/components/responses/InternalServerError'

  /api/auth/logout:
    post:
      operationId: logoutUser
      tags: [ Autenticação ]
      security:
        - bearerAuth: [ ]
      summary: Realiza o logout do usuário, invalidando o refreshToken.
      description: |
        Realiza o logout do usuário invalidando o `refreshToken` armazenado no cookie, efetivamente
        encerrando a sessão do usuário. Após o logout, o usuário precisará fazer login
        novamente para obter um novo token de acesso e refreshToken.
      parameters:
        - $ref: '#/components/parameters/RefreshTokenCookie'
      responses:
        204:
          description: |
            Logout realizado com sucesso. 
            A resposta inclui um cabeçalho `Set-Cookie` para remover o cookie `refreshToken` do navegador.
          headers:
            Set-Cookie:
              description: |
                Define um cookie `refreshToken` com tempo de vida expirado (`Max-Age=0`), 
                instruindo o navegador a removê-lo imediatamente. Os atributos de segurança 
                (HttpOnly, Secure, SameSite) são mantidos para consistência.
              schema:
                type: string
                example: "refreshToken=; Max-Age=0; Path=/; Secure; HttpOnly; SameSite=Strict"
        400:
          description: Erro lançado quando o cookie de refreshToken está ausente ou inválido.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                MissingRefreshToken:
                  summary: RefreshToken Ausente
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "REFRESH_TOKEN_REQUIRED"
                    developerMessage: "O token de atualização é obrigatório."
                    path: "/api/auth/logout"
                InvalidRefreshToken:
                  summary: RefreshToken com formato inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "REFRESH_TOKEN_INVALID_FORMAT"
                    developerMessage: "O formato do token de atualização é inválido."
                    path: "/api/auth/logout"
        401:
          $ref: '#/components/responses/UnauthorizedError'
        500:
          $ref: '#/components/responses/InternalServerError'

  /api/auth/refresh-token:
    post:
      operationId: refreshToken
      tags: [ Autenticação ]
      summary: Renova o token de acesso utilizando o refreshToken.
      description: |
        Renova o token de acesso (accessToken) utilizando o `refreshToken` 
        armazenado no cookie. Se o `refreshToken` for válido, um novo `accessToken` é retornado
        na resposta e um novo `refreshToken` é definido no cookie.
      parameters:
        - $ref: '#/components/parameters/RefreshTokenCookie'
      responses:
        200:
          description: |
            Token renovado com sucesso. Retorna um novo token de acesso e define um novo 
            cookie seguro contendo o `refreshToken`.
          headers:
            Set-Cookie:
              $ref: '#/components/headers/Set-Cookie'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponseDto'
        400:
          description: Erro lançado quando o cookie de refreshToken está ausente ou inválido.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                MissingRefreshToken:
                  summary: RefreshToken Ausente
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "REFRESH_TOKEN_REQUIRED"
                    developerMessage: "O token de atualização é obrigatório."
                    path: "/api/auth/refresh-token"
                InvalidRefreshToken:
                  summary: RefreshToken com formato inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "REFRESH_TOKEN_INVALID_FORMAT"
                    developerMessage: "O formato do token de atualização é inválido."
                    path: "/api/auth/refresh-token"
        401:
          description: Error lançado quando o refreshToken não for encontrado ou estiver expirado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                RefreshTokenNotFound:
                  summary: RefreshToken Não Encontrado
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 401
                    errorCode: "REFRESH_TOKEN_NOT_FOUND"
                    developerMessage: "Sua sessão expirou. Por favor, faça login novamente."
                    path: "/api/auth/refresh-token"
                RefreshTokenExpired:
                  summary: RefreshToken Expirado
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 401
                    errorCode: "REFRESH_TOKEN_INVALID_OR_EXPIRED"
                    developerMessage: "Sua sessão expirou. Por favor, faça login novamente."
                    path: "/api/auth/refresh-token"
        403:
          $ref: '#/components/responses/AccountStatusForbidden'
        500:
          $ref: '#/components/responses/InternalServerError'

  /api/auth/forgot-password:
    post:
      operationId: initiatePasswordReset
      tags: [ Autenticação ]
      summary: Inicia o processo de redefinição de senha enviando um código OTP por SMS.
      description: |
        Inicia o processo de redefinição de senha para o usuário associado ao número de telefone fornecido.
        Um código OTP (One-Time Password) de 6 dígitos será enviado via SMS para o número, se ele estiver cadastrado.
        O código OTP é válido por 10 minutos. Use o `otpSessionId` retornado para validar o código na próxima etapa.
      requestBody:
        description: Corpo da requisição contendo o número de telefone do usuário.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequestDto'
      responses:
        202:
          description: |
            Processo iniciado com sucesso. Retorna o `otpSessionId` para validação do código OTP.
            É retornado um `otpSessionId` inválido caso o número não esteja cadastrado, para evitar 
            vazamento de informações. Sendo assim o `otpSessionId` será validado na próxima etapa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResponseDto'
        400:
          description: Erro lançado quando os dados de entrada forem inválidos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                InvalidFormatPhone:
                  summary: Número de Telefone com Formato Inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "VALIDATION_FAILED"
                    developerMessage: "A validação falhou. Verifique os detalhes dos campos para mais informações."
                    path: "/api/auth/forgot-password"
                    fieldErrors:
                      - fieldName: "phone"
                        errorCode: "PHONE_REQUIRED"
                        developerMessage: "O número de telefone é obrigatório."
                      - fieldName: "phone"
                        errorCode: "PHONE_INVALID_FORMAT"
                        developerMessage: "Número de telefone inválido. Verifique o DDD e a quantidade de dígitos."
                InvalidPhone:
                  summary: Telefone com código de país inválido ou número inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "PHONE_INVALID_FORMAT"
                    developerMessage: "Número de telefone inválido. Verifique o DDD e a quantidade de dígitos."
                    path: "/api/auth/forgot-password"
        500:
          $ref: '#/components/responses/InternalServerError'

  /auth/reset-password-token:
    post:
      operationId: resetPasswordToken
      tags: [ Autenticação ]
      summary: Valida o código OTP e retorna um token de redefinição de senha.
      description: |
        Valida o código OTP (One-Time Password) enviado ao usuário. Se o código for válido e 
        corresponder ao `otpSessionId`, retorna um `passwordResetToken` que deve ser usado para 
        alterar a senha na próxima etapa. O código OTP é válido por 10 minutos.
      requestBody:
        description: Corpo da requisição contendo o `otpSessionId` e o código OTP.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateOtpRequestDto'
      responses:
        200:
          description: |
            Código OTP validado com sucesso. Retorna o token de redefinição de senha. Esse token será
            utilizado na próxima etapa para alterar a senha do usuário.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetTokenResponseDto'
        400:
          description: Erro lançado quando os dados de entrada forem inválidos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                InvalidFormatOtpSessionId:
                  summary: OtpSessionId com formato Inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "VALIDATION_FAILED"
                    developerMessage: "A validação falhou. Verifique os detalhes dos campos para mais informações."
                    path: "/api/auth/reset-password-token"
                    fieldErrors:
                      - fieldName: "otpSessionId"
                        errorCode: "OTP_SESSION_ID_REQUIRED"
                        developerMessage: "O ID da sessão OTP é obrigatório."
                      - fieldName: "otpSessionId"
                        errorCode: "OTP_SESSION_ID_INVALID_FORMAT"
                        developerMessage: "O formato do ID da sessão OTP é inválido."
                InvalidFormatOtpCode:
                  summary: Código OTP com formato Inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "VALIDATION_FAILED"
                    developerMessage: "A validação falhou. Verifique os detalhes dos campos para mais informações."
                    path: "/api/auth/reset-password-token"
                    fieldErrors:
                      - fieldName: "otpCode"
                        errorCode: "OTP_CODE_REQUIRED"
                        developerMessage: "O código de verificação é obrigatório."
                      - fieldName: "otpCode"
                        errorCode: "OTP_CODE_INVALID_FORMAT"
                        developerMessage: "O código de verificação deve ser composto por 6 dígitos numéricos."
                InvalidOrExpiredOtpSessionId:
                  summary: OtpSessionId Inválido ou Expirado
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "OTP_SESSION_INVALID_OR_EXPIRED"
                    developerMessage: "Sessão para a validação do código OTP expirada ou inválida."
                    path: "/api/auth/reset-password-token"
                InvalidOrExpiredOtpCode:
                  summary: Código OTP Inválido ou Expirado
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "OTP_CODE_INVALID_OR_EXPIRED"
                    developerMessage: "Código de verificação inválido ou expirado."
                    path: "/api/auth/reset-password-token"
        403:
          $ref: '#/components/responses/AccountStatusForbidden'
        404:
          description: |
            Error lançado quando não foi encontrado um usuário associado ao otpSessionId. Pode 
            ocorrer se o usuário tiver sido deletado após iniciar o processo de redefinição de senha
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                timestamp: "2024-06-15T14:30:00Z"
                status: 404
                errorCode: "USER_NOT_FOUND"
                developerMessage: "Usuário não encontrado."
                path: "/api/auth/reset-password-token"
        500:
          $ref: '#/components/responses/InternalServerError'

  /auth/reset-password:
    post:
      operationId: resetPassword
      tags: [ Autenticação ]
      summary: Redefine a senha do usuário utilizando o token de redefinição.
      description: |
        Redefine a senha do usuário utilizando o `passwordResetToken` obtido na etapa anterior.
        A nova senha deve ser fornecida juntamente com a confirmação da senha, que deve ser idêntica.
        Após a redefinição, o token não pode ser reutilizado e o usuário precisa fazer login novamente.
      requestBody:
        description: Corpo da requisição contendo o token de redefinição e a nova senha.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestDto'
      responses:
        204:
          description: Senha redefinida com sucesso. Não há conteúdo na resposta.
          headers:
            Set-Cookie:
              description: |
                Define um cookie `refreshToken` com tempo de vida expirado (`Max-Age=0`), 
                instruindo o navegador a removê-lo imediatamente. Os atributos de segurança 
                (HttpOnly, Secure, SameSite) são mantidos para consistência.
              schema:
                type: string
                example: "refreshToken=; Max-Age=0; Path=/; Secure; HttpOnly; SameSite=Strict"
        400:
          description: Erro lançado quando os dados de entrada forem inválidos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ResetTokenInvalidOrExpired:
                  summary: Token de redefinição inválido ou expirado
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "RESET_TOKEN_INVALID_OR_EXPIRED"
                    developerMessage: "O token de redefinição de senha é inválido ou expirou."
                    path: "/api/auth/reset-password"
                InvalidFormatPasswordResetToken:
                  summary: PasswordResetToken com formato Inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "VALIDATION_FAILED"
                    developerMessage: "A validação falhou. Verifique os detalhes dos campos para mais informações."
                    path: "/api/auth/reset-password"
                    fieldErrors:
                      - fieldName: "passwordResetToken"
                        errorCode: "RESET_TOKEN_REQUIRED"
                        developerMessage: "O token de redefinição de senha é obrigatório."
                      - fieldName: "passwordResetToken"
                        errorCode: "RESET_TOKEN_INVALID_FORMAT"
                        developerMessage: "O formato do token de redefinição de senha é inválido."
                InvalidFormatNewPassword:
                  summary: Nova senha com formato Inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "VALIDATION_FAILED"
                    developerMessage: "A validação falhou. Verifique os detalhes dos campos para mais informações."
                    path: "/api/auth/reset-password"
                    fieldErrors:
                      - fieldName: "newPassword"
                        errorCode: "PASSWORD_REQUIRED"
                        developerMessage: "A senha é obrigatória."
                      - fieldName: "newPassword"
                        errorCode: "PASSWORD_INVALID_LENGTH"
                        developerMessage: "A senha deve ter entre 6 e 20 caracteres."
                      - fieldName: "newPassword"
                        errorCode: "PASSWORD_NO_WHITESPACE"
                        developerMessage: "A senha não pode conter espaços em branco."
                InvalidFormatConfirmPassword:
                  summary: Confirmação de senha com formato Inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "VALIDATION_FAILED"
                    developerMessage: "A validação falhou. Verifique os detalhes dos campos para mais informações."
                    path: "/api/auth/reset-password"
                    fieldErrors:
                      - fieldName: "confirmPassword"
                        errorCode: "CONFIRM_PASSWORD_REQUIRED"
                        developerMessage: "A confirmação de senha é obrigatória."
                      - fieldName: "confirmPassword"
                        errorCode: "PASSWORD_INVALID_LENGTH"
                        developerMessage: "A senha deve ter entre 6 e 20 caracteres."
                      - fieldName: "confirmPassword"
                        errorCode: "PASSWORD_NO_WHITESPACE"
                        developerMessage: "A senha não pode conter espaços em branco."
                      - fieldName: "confirmPassword"
                        errorCode: "PASSWORDS_DO_NOT_MATCH"
                        developerMessage: "A senha de confirmação não corresponde à senha."
        403:
          $ref: '#/components/responses/AccountStatusForbidden'
        404:
          description: |
            Error lançado quando não foi encontrado um usuário associado ao passwordResetToken. Pode 
            ocorrer se o usuário for deletado após iniciar o processo de redefinição de senha
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                timestamp: "2024-06-15T14:30:00Z"
                status: 404
                errorCode: "USER_NOT_FOUND"
                developerMessage: "Usuário não encontrado."
                path: "/api/auth/reset-password"
        500:
          $ref: '#/components/responses/InternalServerError'

  /api/auth/signup:
    post:
      operationId: registerUser
      tags: [ Autenticação ]
      summary: Realiza o cadastro de um novo usuário e inicia o processo de verificação por OTP.
      description: |
        Este endpoint cria uma nova conta de usuário com o status `PENDENTE` e com os dados fornecidos.
        Após o cadastro, um código OTP (One-Time Password) de 6 dígitos será enviado via SMS 
        para o número de telefone fornecido, para verificar a propriedade do número.
      requestBody:
        description: Corpo da requisição contendo os dados do novo usuário.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequestDto'
      responses:
        202:
          description: |
            Usuário cadastrado com sucesso. Retorna o um `otpSessionId` que será utilizado na
            próxima etapa para validar e ativar a conta do usuário. Um código OTP foi enviado para 
            o número de telefone fornecido, se ele não estiver cadastrado. Caso o número já 
            esteja em uso, uma mensagem informativa será retornada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponseDto'
        400:
          description: Erro lançado quando ocorrer um erro durante a validação dos dados de entrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                InvalidFormatUsername:
                  summary: Nome de usuário com formato inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "VALIDATION_FAILED"
                    developerMessage: "A validação falhou. Verifique os detalhes dos campos para mais informações."
                    path: "/api/auth/signup"
                    fieldErrors:
                      - fieldName: "username"
                        errorCode: "USERNAME_REQUIRED"
                        developerMessage: "O nome de usuário é obrigatório."
                      - fieldName: "username"
                        errorCode: "USERNAME_INVALID_FORMAT"
                        developerMessage: "O nome de usuário pode conter apenas letras, números e underscore (_)."
                      - fieldName: "username"
                        errorCode: "USERNAME_INVALID_LENGTH"
                        developerMessage: "O nome de usuário deve ter entre 3 e 50 caracteres."
                InvalidFormatFullName:
                  summary: Nome completo do usuário com formato inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "VALIDATION_FAILED"
                    developerMessage: "A validação falhou. Verifique os detalhes dos campos para mais informações."
                    path: "/api/auth/signup"
                    fieldErrors:
                      - fieldName: "fullName"
                        errorCode: "FULL_NAME_REQUIRED"
                        developerMessage: "O nome completo é obrigatório."
                      - fieldName: "fullName"
                        errorCode: "FULL_NAME_INVALID_LENGTH"
                        developerMessage: "O nome completo deve ter entre 3 e 100 caracteres."
                InvalidFormatPhone:
                  summary: Telefone com formato inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "VALIDATION_FAILED"
                    developerMessage: "A validação falhou. Verifique os detalhes dos campos para mais informações."
                    path: "/api/auth/signup"
                    fieldErrors:
                      - fieldName: "phone"
                        errorCode: "PHONE_REQUIRED"
                        developerMessage: "O número de telefone é obrigatório."
                      - fieldName: "phone"
                        errorCode: "PHONE_INVALID_FORMAT"
                        developerMessage: "Número de telefone inválido. Verifique o DDD e a quantidade de dígitos."
                InvalidFormatPassword:
                  summary: Senha com formato inválida
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "VALIDATION_FAILED"
                    developerMessage: "A validação falhou. Verifique os detalhes dos campos para mais informações."
                    path: "/api/auth/signup"
                    fieldErrors:
                      - fieldName: "password"
                        errorCode: "PASSWORD_REQUIRED"
                        developerMessage: "A senha é obrigatória."
                      - fieldName: "password"
                        errorCode: "PASSWORD_INVALID_LENGTH"
                        developerMessage: "A senha deve ter entre 6 e 20 caracteres."
                      - fieldName: "password"
                        errorCode: "PASSWORD_NO_WHITESPACE"
                        developerMessage: "A senha não pode conter espaços em branco."
                InvalidFormatConfirmPassword:
                  summary: Senha de confirmação com formato inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "VALIDATION_FAILED"
                    developerMessage: "A validação falhou. Verifique os detalhes dos campos para mais informações."
                    path: "/api/auth/signup"
                    fieldErrors:
                      - fieldName: "confirmPassword"
                        errorCode: "CONFIRM_PASSWORD_REQUIRED"
                        developerMessage: "A confirmação de senha é obrigatória."
                      - fieldName: "confirmPassword"
                        errorCode: "PASSWORD_INVALID_LENGTH"
                        developerMessage: "A senha deve ter entre 6 e 20 caracteres."
                      - fieldName: "confirmPassword"
                        errorCode: "PASSWORD_NO_WHITESPACE"
                        developerMessage: "A senha não pode conter espaços em branco."
                      - fieldName: "confirmPassword"
                        errorCode: "PASSWORDS_DO_NOT_MATCH"
                        developerMessage: "A senha de confirmação não corresponde à senha."
                InvalidPhone:
                  summary: Telefone com código de país inválido ou número inválido
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 400
                    errorCode: "PHONE_INVALID_FORMAT"
                    developerMessage: "Número de telefone inválido. Verifique o DDD e a quantidade de dígitos."
                    path: "/api/auth/signup"
        409:
          description: Erro lançado quando o nome de usuário ou telefone já estão em uso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                UsernameAlreadyExists:
                  summary: Nome de usuário já está em uso
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 409
                    errorCode: "USERNAME_ALREADY_EXISTS"
                    developerMessage: "Esse nome de usuário já está em uso."
                    path: "/api/auth/signup"
                PhoneAlreadyExists:
                  summary: Telefone já está em uso
                  value:
                    timestamp: "2024-06-15T14:30:00Z"
                    status: 409
                    errorCode: "PHONE_ALREADY_EXISTS"
                    developerMessage: "Esse número de telefone já está em uso."
                    path: "/api/auth/signup"
        500:
          $ref: '#/components/responses/InternalServerError'
